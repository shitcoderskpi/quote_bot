services:
  redis:
    container_name: redis
    image: redis:7
    networks:
      - monitoring

  prometheus:
    container_name: prometheus
    image: prom/prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - monitoring

  bot:
    container_name: telegram-bot
    hostname: telegram-bot
    networks:
      - monitoring
    build:
      context: ../services/bot
      dockerfile: Dockerfile
    depends_on:
      - redis
    environment:
      - BOT_TOKEN
      - REDIS_HOST
      - LOG_LVL
      - LOG_PATH
    ports:
      - "8000:8000"
    volumes:
      - ../services/logs:/app/logs

  generator:
    container_name: generator
    hostname: generator
    networks:
      - monitoring
    build:
      context: ../services/generator_r/
      dockerfile: Dockerfile
    depends_on:
      - redis
    environment:
      - RUST_LOG=info
      - REDIS_HOST=redis
    volumes:
      - ../services/generator_r/:/app/images
    restart: unless-stopped

  template_engine:
    container_name: template_engine
    hostname: template_engine
    networks:
      - monitoring
    build:
      context: ../services/template_engine/
      dockerfile: Dockerfile
    depends_on:
      - redis
    environment:
      - REDIS_HOST
      - LOG_LVL
      - LOG_PATH
    volumes:
      - ../services/logs:/app/logs
      #- ../services/template_engine:/app # Workaround, updates after man restart (instead of rebuild)
# TODO: This does not work!!! Reread docs and find out why to implement
#    develop:
#      watch:
#        - action: sync
#          path: ../services/template_engine/
#          target: /app
#          ignore:
#            # Ignores everything but python files
#            - "!**/*.py"
#
#        - action: rebuild
#          path: Dockerfile
#
#        - action: restart
#          path: ../services/template_engine/

networks:
  monitoring: